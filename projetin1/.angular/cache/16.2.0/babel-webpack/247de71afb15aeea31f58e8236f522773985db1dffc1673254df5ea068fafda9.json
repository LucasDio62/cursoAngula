{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction FormsComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormsComponent_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", item_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", item_r4.comida, \" - \", item_r4.preco, \" \");\n  }\n}\nexport class FormsComponent {\n  constructor() {\n    this.listComidas = [{\n      comida: \"salada de frutas\",\n      preco: \"20\"\n    }, {\n      comida: \"ovos mexidos\",\n      preco: \"15\"\n    }, {\n      comida: \"x-bacon\",\n      preco: \"9\"\n    }];\n  }\n  ngOnInit() {}\n  submitForm(form) {}\n}\n_class = FormsComponent;\n_class.ɵfac = function FormsComponent_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-forms\"]],\n  decls: 33,\n  vars: 6,\n  consts: [[3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"type\", \"text\", \"name\", \"nome\", \"required\", \"\", 3, \"ngModel\"], [\"nome\", \"ngModel\"], [4, \"ngIf\"], [\"type\", \"radio\", \"name\", \"nome\", \"value\", \"marculino\", \"ngModel\", \"\"], [\"type\", \"radio\", \"name\", \"sexo\", \"value\", \"feminino\", \"ngModel\", \"\"], [\"type\", \"radio\", \"name\", \"sexo\", \"value\", \"outros\", \"ngModel\", \"\"], [\"type\", \"range\", \"name\", \"anos\", \"ngModel\", \"\"], [\"type\", \"checkbox\", \"name\", \"angular\", \"value\", \"angular\", \"ngModel\", \"\"], [\"type\", \"checkbox\", \"name\", \"react\", \"value\", \"react\", \"ngModel\", \"\"], [\"name\", \"comidas\", \"ngModel\", \"\"], [\"value\", \"\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngValue\"]],\n  template: function FormsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function FormsComponent_Template_form_ngSubmit_0_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.submitForm(_r0));\n      });\n      i0.ɵɵelementStart(2, \"label\");\n      i0.ɵɵtext(3, \" name: \");\n      i0.ɵɵelement(4, \"input\", 2, 3);\n      i0.ɵɵtemplate(6, FormsComponent_span_6_Template, 2, 0, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"br\")(8, \"br\");\n      i0.ɵɵelementStart(9, \"label\");\n      i0.ɵɵtext(10, \" masculino: \");\n      i0.ɵɵelement(11, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"label\");\n      i0.ɵɵtext(13, \" feminino: \");\n      i0.ɵɵelement(14, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"label\");\n      i0.ɵɵtext(16, \" outros: \");\n      i0.ɵɵelement(17, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"label\");\n      i0.ɵɵtext(19, \" anos: \");\n      i0.ɵɵelement(20, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"label\");\n      i0.ɵɵtext(22, \" angular: \");\n      i0.ɵɵelement(23, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"label\");\n      i0.ɵɵtext(25, \" react: \");\n      i0.ɵɵelement(26, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"select\", 11)(28, \"option\", 12);\n      i0.ɵɵtext(29, \"selecione uma comida\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(30, FormsComponent_option_30_Template, 2, 3, \"option\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtext(31);\n      i0.ɵɵpipe(32, \"json\");\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n      const _r1 = i0.ɵɵreference(5);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", _r1.value);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r1.invalid);\n      i0.ɵɵadvance(24);\n      i0.ɵɵproperty(\"ngForOf\", ctx.listComidas);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\\n\", i0.ɵɵpipeBind1(32, 4, _r0.value), \"\\n\");\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.RangeValueAccessor, i2.CheckboxControlValueAccessor, i2.SelectControlValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm, i1.JsonPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","item_r4","ɵɵadvance","ɵɵtextInterpolate2","comida","preco","FormsComponent","constructor","listComidas","ngOnInit","submitForm","form","selectors","decls","vars","consts","template","FormsComponent_Template","rf","ctx","ɵɵlistener","FormsComponent_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r5","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","ɵɵtemplate","FormsComponent_span_6_Template","FormsComponent_option_30_Template","_r1","value","invalid","ɵɵtextInterpolate1","ɵɵpipeBind1"],"sources":["C:\\Users\\liice\\Desktop\\ang\\projetin1\\src\\app\\forms\\forms.component.ts","C:\\Users\\liice\\Desktop\\ang\\projetin1\\src\\app\\forms\\forms.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forms',\r\n  templateUrl: './forms.component.html',\r\n  styleUrls: ['./forms.component.css']\r\n})\r\nexport class FormsComponent implements OnInit{\r\n  public listComidas: Array<{comida: string, preco: string}> = [\r\n    {comida: \"salada de frutas\", preco: \"20\"},\r\n    {comida: \"ovos mexidos\", preco: \"15\"},\r\n    {comida: \"x-bacon\", preco: \"9\"}\r\n  ]\r\n  constructor() {}\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  public submitForm(form: ng ) {\r\n\r\n  }\r\n\r\n}\r\n","<form #form=\"ngForm\" (ngSubmit)=\"submitForm(form)\">\r\n    <label>\r\n        name:\r\n        <!-- verifica se o nome esta valido para aparecer o span -->\r\n        <input type=\"text\" name=\"nome\" #nome=\"ngModel\" [ngModel]=\"nome.value\" required>\r\n        <span *ngIf=\"nome.invalid\">invalid</span>\r\n    </label>\r\n    <br>\r\n    <br>\r\n    <label>\r\n        masculino:\r\n        <input type=\"radio\" name=\"nome\" value=\"marculino\" ngModel>\r\n    </label>\r\n    <label>\r\n        feminino:\r\n        <input type=\"radio\" name=\"sexo\" value=\"feminino\" ngModel>\r\n    </label>\r\n    <label>\r\n        outros:\r\n        <input type=\"radio\" name=\"sexo\" value=\"outros\" ngModel>\r\n    </label>\r\n    <label>\r\n        anos:\r\n        <input type=\"range\" name=\"anos\" ngModel>\r\n    </label>\r\n    <label>\r\n        angular:\r\n        <input type=\"checkbox\" name=\"angular\" value=\"angular\" ngModel>\r\n    </label>\r\n    <label>\r\n        react:\r\n        <input type=\"checkbox\" name=\"react\" value=\"react\" ngModel>\r\n    </label>\r\n    <select name=\"comidas\" ngModel>\r\n        <option value=\"\">selecione uma comida</option>\r\n        <option *ngFor=\"let item of listComidas\" [ngValue]=\"item\">\r\n            {{item.comida}} - {{item.preco}}\r\n        </option>\r\n    </select>\r\n    \r\n</form>\r\n{{ form.value | json }}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}