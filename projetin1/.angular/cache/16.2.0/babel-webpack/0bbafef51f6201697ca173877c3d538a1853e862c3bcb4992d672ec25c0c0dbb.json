{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/food-list.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction FoodListComponent_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"input\", 1);\n    i0.ɵɵlistener(\"ngModelChange\", function FoodListComponent_li_0_Template_input_ngModelChange_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(item_r1.nome = $event);\n    })(\"keyup.enter\", function FoodListComponent_li_0_Template_input_keyup_enter_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.foodListedit(item_r1.nome, item_r1.id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function FoodListComponent_li_0_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.foodListdelete(item_r1.id));\n    });\n    i0.ɵɵtext(4, \"deletar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.id, \" - \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", item_r1.nome);\n  }\n}\nexport class FoodListComponent {\n  constructor(foodListService) {\n    this.foodListService = foodListService;\n  }\n  ngOnInit() {\n    this.foodListService.foodList().subscribe({\n      next: res => this.foodList = res,\n      error: err => err\n    });\n    this.foodListService.emitEvent.subscribe(res => {\n      alert(`voce add ${res.nome}`);\n      return this.foodList.push(res);\n    });\n  }\n  foodListdelete(id) {\n    return this.foodListService.foodListdelet(id).subscribe({\n      next: () => {\n        this.foodList = this.foodList.filter(item => {\n          return id !== item.id;\n        });\n      },\n      error: e => console.log(e)\n    });\n  }\n  foodListedit(value, id) {\n    this.foodListService.foodListedit(value, id);\n  }\n}\n_class = FoodListComponent;\n_class.ɵfac = function FoodListComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FoodListService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-food-list\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [3, \"click\"]],\n  template: function FoodListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FoodListComponent_li_0_Template, 5, 2, \"li\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.foodList);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵlistener","FoodListComponent_li_0_Template_input_ngModelChange_2_listener","$event","restoredCtx","ɵɵrestoreView","_r3","item_r1","$implicit","ɵɵresetView","nome","FoodListComponent_li_0_Template_input_keyup_enter_2_listener","ctx_r4","ɵɵnextContext","foodListedit","id","ɵɵelementEnd","FoodListComponent_li_0_Template_button_click_3_listener","ctx_r5","foodListdelete","ɵɵadvance","ɵɵtextInterpolate1","ɵɵproperty","FoodListComponent","constructor","foodListService","ngOnInit","foodList","subscribe","next","res","error","err","emitEvent","alert","push","foodListdelet","filter","item","e","console","log","value","ɵɵdirectiveInject","i1","FoodListService","selectors","decls","vars","consts","template","FoodListComponent_Template","rf","ctx","ɵɵtemplate","FoodListComponent_li_0_Template"],"sources":["C:\\Users\\liice\\Desktop\\ang\\cursoAngula\\projetin1\\src\\app\\shared\\food-list\\food-list.component.ts","C:\\Users\\liice\\Desktop\\ang\\cursoAngula\\projetin1\\src\\app\\shared\\food-list\\food-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FoodList } from 'src/app/module/food-list';\nimport { FoodListService } from 'src/app/services/food-list.service';\n\n@Component({\n  selector: 'app-food-list',\n  templateUrl: './food-list.component.html',\n  styleUrls: ['./food-list.component.css']\n})\nexport class FoodListComponent implements OnInit {\n\n  public foodList: FoodList | any;\n\n  constructor (private foodListService: FoodListService) {}\n\n  ngOnInit(): void {\n    this.foodListService.foodList().subscribe({\n      next: res => this.foodList = res,\n      error: (err) => err\n    });\n    this.foodListService.emitEvent.subscribe(\n      res => {\n        alert(`voce add ${res.nome}`);\n        return this.foodList.push(res)\n      }\n    )\n  }\n  public foodListdelete(id: number) {\n    return this.foodListService.foodListdelet(id).subscribe({\n      next: () => {\n        this.foodList = this.foodList.filter(\n        item => {\n          return id !== item.id\n        }\n        )\n      },\n      error: (e) => console.log(e)\n    })\n  }\n\n  public foodListedit(value: string, id: number) {\n    this.foodListService.foodListedit(value, id)\n  }\n\n}\n","<li *ngFor=\"let item of foodList\">\n    {{item.id}} - <input type=\"text\" [(ngModel)]=\"item.nome\" (keyup.enter)=\"foodListedit(item.nome, item.id)\">\n    <button (click)=\"foodListdelete(item.id)\">deletar</button>\n</li>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}